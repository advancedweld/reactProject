import { useEffect, useRef, useState } from 'react'
import { Button } from 'antd'
import AMapLoader from '@amap/amap-jsapi-loader'
import styles from './style.module.css'

const AMAP_SECRET = '44b048c7633e913ced8eae81973ac5ee'
const AMAP_KEY = '6bd5bbf7da5073b454728cd23a23e8ac'
export default function MapContainer() {
  const [pos, setPos] = useState({
    lng: 116.397428, // ÁªèÂ∫¶
    lat: 39.90923, // Á∫¨Â∫¶
  })
  const amapRef = useRef<any>(null)
  const geolocationRef = useRef<any>(null)
  const getMyLoction = () => {
    if (geolocationRef.current) {
      const onComplete = (data: any) => {
        console.log('üöÄ ~ onComplete ~ data:', data)
      }

      const onError = (data: any) => {
        console.log('üöÄ ~ onError ~ data:', data)
        // ÂÆö‰ΩçÂá∫Èîô
      }
      geolocationRef.current.getCurrentPosition(function (status, result) {
        if (status === 'complete') {
          onComplete(result)
        } else {
          onError(result)
        }
      })
    }
  }

  useEffect(() => {
    let mpInstance: any = null
    window._AMapSecurityConfig = {
      securityJsCode: AMAP_SECRET,
    }
    AMapLoader.load({
      key: AMAP_KEY, // Áî≥ËØ∑Â•ΩÁöÑWebÁ´ØÂºÄÂèëËÄÖKeyÔºåÈ¶ñÊ¨°Ë∞ÉÁî® load Êó∂ÂøÖÂ°´
      version: '2.0', // ÊåáÂÆöË¶ÅÂä†ËΩΩÁöÑ JSAPI ÁöÑÁâàÊú¨ÔºåÁº∫ÁúÅÊó∂ÈªòËÆ§‰∏∫ 1.4.15
      //  ÈúÄË¶Å‰ΩøÁî®ÁöÑÁöÑÊèí‰ª∂ÂàóË°®ÔºåÂ¶ÇÊØî‰æãÂ∞∫'AMap.Scale'ÔºåÊîØÊåÅÊ∑ªÂä†Â§ö‰∏™Â¶ÇÔºö['...','...']
      plugins: ['AMap.Scale', 'AMap.Geolocation'],
    })
      .then((AMap) => {
        amapRef.current = AMap
        //  Âú∞ÂõæÂÆû‰æã
        mpInstance = new AMap.Map('amap-container', {
          // ËÆæÁΩÆÂú∞ÂõæÂÆπÂô®id
          viewMode: '3D', // ÊòØÂê¶‰∏∫3DÂú∞ÂõæÊ®°Âºè
          zoom: 11, // ÂàùÂßãÂåñÂú∞ÂõæÁ∫ßÂà´
          center: [116.397428, 39.90923], // ÂàùÂßãÂåñÂú∞Âõæ‰∏≠ÂøÉÁÇπ‰ΩçÁΩÆ
        })
        // Âú∞ÁêÜ‰ΩçÁΩÆÊèí‰ª∂ÂÆû‰æã
        geolocationRef.current = new AMap.Geolocation({
          enableHighAccuracy: true, // ÊòØÂê¶‰ΩøÁî®È´òÁ≤æÂ∫¶ÂÆö‰ΩçÔºåÈªòËÆ§Ôºötrue
          timeout: 10000, // ËÆæÁΩÆÂÆö‰ΩçË∂ÖÊó∂Êó∂Èó¥ÔºåÈªòËÆ§ÔºöÊó†Á©∑Â§ß
          offset: [10, 20], // ÂÆö‰ΩçÊåâÈíÆÁöÑÂÅúÈù†‰ΩçÁΩÆÁöÑÂÅèÁßªÈáè
          zoomToAccuracy: true, //  ÂÆö‰ΩçÊàêÂäüÂêéË∞ÉÊï¥Âú∞ÂõæËßÜÈáéËåÉÂõ¥‰ΩøÂÆö‰Ωç‰ΩçÁΩÆÂèäÁ≤æÂ∫¶ËåÉÂõ¥ËßÜÈáéÂÜÖÂèØËßÅÔºåÈªòËÆ§Ôºöfalse
          position: 'RB', //  ÂÆö‰ΩçÊåâÈíÆÁöÑÊéíÊîæ‰ΩçÁΩÆ,  RBË°®Á§∫Âè≥‰∏ã
        })
      })
      .catch((e) => {
        console.log('@@@@laod error', e)
      })

    return () => {
      console.log('@@@@amap xiezai')
      mpInstance?.destroy()
    }
  }, [])

  return (
    <div className={styles.wrap}>
      <div className={styles.pannel}>
        <Button onClick={getMyLoction}>ÂÆö‰ΩçÂà∞ÂΩìÂâç‰ΩçÁΩÆ</Button>
      </div>
      <div id='amap-container' className={styles.container} style={{ height: '500px' }}></div>
    </div>
  )
}
